@page
@model FUNewsManagementSystem.Pages.SystemAccounts.LoginModel
@{
    Layout = null;
    ViewData["Title"] = "Login";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container d-flex justify-content-center align-items-center vh-100">
        <div class="card shadow-lg p-4" style="width: 100%; max-width: 400px; border-radius: 20px;">
            <h2 class="text-center mb-4">Login</h2>
            <form id="loginForm">
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <input type="email" id="email" class="form-control" placeholder="Enter your email" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Password</label>
                    <input type="password" id="password" class="form-control" placeholder="Enter your password" required />
                </div>
                <div class="alert alert-danger text-center d-none" id="errorBox"></div>
                <button type="submit" class="btn btn-primary w-100">Login</button>
            </form>
            <div class="text-center mt-2">
                <a asp-page="/SystemAccounts/GoogleLogin" class="btn btn-outline-danger w-100">
                    <img src="https://developers.google.com/identity/images/g-logo.png" width="20" class="me-2" />
                    Sign in with Google
                </a>
            </div>
            <div class="text-center mt-3">
                <span>Don't have an account?</span>
                <a asp-page="/SystemAccounts/Register" class="btn btn-link">Register</a>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById("loginForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const email = document.getElementById("email").value;
            const password = document.getElementById("password").value;

            const response = await fetch("https://localhost:7126/api/SystemAccount/login", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ email, password })
            });

            if (response.ok) {
                const result = await response.json();
                const token = result.token;
                localStorage.setItem("jwtToken", token);

                console.log("Received token:", token);

                const userInfo = parseJwt(token);
                console.log("Decoded token:", userInfo);

                const role = userInfo?.role;
                console.log("User role:", role);

                // Redirect based on role (commented out for debugging)
                if (role === "1") {
                    console.log("Redirecting to Staff News Articles");
                     window.location.href = "/NewsArticles/Index";
                } else if (role === "2") {
                    console.log("Redirecting to Lecturer");
                    window.location.href = "/NewsArticles/LecturerNews";
                } else if (role === "3") {
                    console.log("Redirecting to Admin");
                    window.location.href = "/SystemAccounts/Index";
                } else {
                    console.log("Redirecting to / (fallback)");
                    window.location.href = "/";
                }
            } else {
                document.getElementById("errorBox").classList.remove("d-none");
                document.getElementById("errorBox").innerText = "Login failed. Please check your credentials.";
            }
        });

        function parseJwt(token) {
            try {
                const base64Url = token.split('.')[1];
                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                }).join(''));
                return JSON.parse(jsonPayload);
            } catch (e) {
                return null;
            }
        }
    </script>

</body>
</html>
