@page
@model FUNewsManagementSystem.Pages.Categories.EditModel

@{
    ViewData["Title"] = "Edit Category";
}

<div class="container d-flex justify-content-center mt-4">
    <div class="card shadow-sm border-0" style="width: 50%;">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0"><i class="bi bi-pencil-square"></i> Edit Category</h5>
        </div>
        <div class="card-body">
            <form id="editCategoryForm">
                <input type="hidden" id="CategoryId" name="CategoryId" />

                <div class="mb-3">
                    <label for="CategoryName" class="form-label">Category Name</label>
                    <input id="CategoryName" name="CategoryName" class="form-control" required />
                </div>

                <div class="mb-3">
                    <label for="CategoryDesciption" class="form-label">Description</label>
                    <textarea id="CategoryDesciption" name="CategoryDesciption" class="form-control" rows="2" required></textarea>
                </div>

                <div class="mb-3">
                    <label for="ParentCategoryId" class="form-label">Parent Category</label>
                    <select id="ParentCategoryId" name="ParentCategoryId" class="form-select">
                        <option value="">-- Select --</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label for="IsActive" class="form-label">Status</label>
                    <select id="IsActive" name="IsActive" class="form-select">
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                </div>

                <div class="d-flex justify-content-between">
                    <a href="/Categories/Index" class="btn btn-outline-secondary">Back</a>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    const token = localStorage.getItem("jwtToken");
    const urlParams = new URLSearchParams(window.location.search);
    const categoryId = urlParams.get("id");
    const apiUrl = `https://localhost:7126/api/Category/${categoryId}`;

    // Load existing category data
    fetch(apiUrl, {
        headers: {
            'Authorization': `Bearer ${token}`
        }
    })
    .then(res => res.json())
    .then(data => {
        document.getElementById("CategoryId").value = data.categoryId;
        document.getElementById("CategoryName").value = data.categoryName;
        document.getElementById("CategoryDesciption").value = data.categoryDesciption;
        document.getElementById("IsActive").value = data.isActive;

        // Fetch parent category list
        fetch("https://localhost:7126/api/Category/active", {
            headers: { 'Authorization': `Bearer ${token}` }
        })
        .then(res => res.json())
        .then(categories => {
            const parentSelect = document.getElementById("ParentCategoryId");
            categories.forEach(cat => {
                const opt = document.createElement("option");
                opt.value = cat.categoryId;
                opt.textContent = cat.categoryName;
                if (data.parentCategoryId && cat.categoryId === data.parentCategoryId) {
                    opt.selected = true;
                }
                parentSelect.appendChild(opt);
            });
        });
    })
    .catch(err => console.error("❌ Failed to load category data", err));

    // Submit update
    document.getElementById("editCategoryForm").addEventListener("submit", function (e) {
        e.preventDefault();

        const updated = {
            categoryId: document.getElementById("CategoryId").value,
            categoryName: document.getElementById("CategoryName").value,
            categoryDesciption: document.getElementById("CategoryDesciption").value,
            parentCategoryId: document.getElementById("ParentCategoryId").value || null,
            isActive: document.getElementById("IsActive").value === "true"
        };

        fetch("https://localhost:7126/api/Category", {
            method: "PUT",
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(updated)
        })
        .then(res => {
            if (res.ok) {
                window.location.href = "/Categories/Index";
            } else {
                alert("❌ Failed to update category.");
            }
        })
        .catch(err => alert("❌ Error: " + err));
    });
</script>
