<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FUNews Management</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        .navbar-brand span {
            color: #0d6efd;
            letter-spacing: 2px;
        }

        .navbar .nav-link.active,
        .navbar .nav-link:focus,
        .navbar .nav-link:hover {
            color: #0d6efd !important;
        }

        .navbar .nav-link {
            font-weight: 500;
            transition: color 0.2s;
        }

        .user-greeting {
            font-weight: 500;
            color: #198754 !important;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm border-bottom">
            <div class="container-fluid">
                <a class="navbar-brand fw-bold d-flex align-items-center" href="/">
                    <i class="bi bi-newspaper me-2 text-primary" style="font-size: 1.6rem;"></i>
                    <span>FUNews Management</span>
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0" id="navLinks"></ul>
                    <ul class="navbar-nav ms-auto mb-2 mb-lg-0" id="userSection"></ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container mt-4">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            loadNavbarContent();
        });

        async function loadNavbarContent() {
            const token = localStorage.getItem("jwtToken");
            const navLinks = document.getElementById("navLinks");
            const userSection = document.getElementById("userSection");

            if (!token) {
                userSection.innerHTML = `
                    <li class="nav-item">
                        <a class="btn btn-primary btn-sm" href="/SystemAccounts/Login">
                            <i class="bi bi-box-arrow-in-right"></i> Login
                        </a>
                    </li>`;
                return;
            }

            const userInfo = parseJwt(token);
            const role = userInfo?.role;
            const name = userInfo["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"] || "User";

            let navHtml = "";
            let userHtml = `
                <li class="nav-item d-flex align-items-center me-2">
                    <span class="nav-link user-greeting">
                        <i class="bi bi-person-circle me-1"></i> Hello, ${name}
                    </span>
                </li>
                <li class="nav-item">
                    <button onclick="logout()" class="btn btn-outline-danger btn-sm">
                        <i class="bi bi-box-arrow-right"></i> Logout
                    </button>
                </li>`;

            if (role === "1") {
                navHtml += `
                    <li class="nav-item"><a class="nav-link" href="/NewsArticles/Index"><i class="bi bi-file-earmark-text"></i> Manage News</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Categories/Index"><i class="bi bi-collection"></i> Manage Category</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Tags/Index"><i class="bi bi-tags"></i> Manage Tag</a></li>
                    <li class="nav-item"><a class="nav-link" href="/NewsArticles/History"><i class="bi bi-clock-history"></i> View History</a></li>`;
            } else if (role === "2") {
                try {
                    const res = await fetch("https://localhost:7126/api/Category", {
                        headers: { "Authorization": "Bearer " + token }
                    });
                    const categories = await res.json();
                    const parents = categories.filter(c => c.parentCategoryId === null);
                    const children = categories.filter(c => c.parentCategoryId !== null);
                    navHtml += `
                        <li class="nav-item">
                            <a class="nav-link" href="/NewsArticles/LecturerNews">
                                <i class="bi bi-journal-text"></i> All News
                            </a>
                        </li>`;

                    parents.forEach(parent => {
                        const subs = children.filter(c => c.parentCategoryId === parent.categoryId);
                        if (subs.length > 0) {
                            navHtml += `
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="dropdown-${parent.categoryId}" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        ${parent.categoryName}
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="dropdown-${parent.categoryId}">
                                        ${subs.map(sub => `
                                            <li><a class="dropdown-item" href="/NewsArticles/LecturerNews?categoryId=${sub.categoryId}">${sub.categoryName}</a></li>
                                        `).join("")}
                                    </ul>
                                </li>`;
                        } else {
                            navHtml += `<li class="nav-item"><a class="nav-link" href="/NewsArticles/LecturerNews?categoryId=${parent.categoryId}">${parent.categoryName}</a></li>`;
                        }
                    });
                } catch (err) {
                    console.error("Failed to load categories", err);
                    navHtml += `<li class="nav-item"><a class="nav-link" href="/NewsArticles/LecturerNews">View News</a></li>`;
                }
            } else if (role === "3") {
                navHtml += `
                    <li class="nav-item"><a class="nav-link" href="/SystemAccounts/Index"><i class="bi bi-people"></i> Manage Accounts</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Reports/Index"><i class="bi bi-bar-chart"></i> Reports</a></li>`;
            }

            navLinks.innerHTML = navHtml;
            userSection.innerHTML = userHtml;
        }

        function logout() {
            localStorage.removeItem("jwtToken");
            window.location.href = "/SystemAccounts/Login";
        }

        function parseJwt(token) {
            try {
                const base64Url = token.split('.')[1];
                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                }).join(''));
                return JSON.parse(jsonPayload);
            } catch (e) {
                return null;
            }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
